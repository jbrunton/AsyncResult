buildscript {
    dependencies {
        def dokka_version = '0.9.17'

        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
}

group 'com.jbrunton'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    def kotlin_version = '1.3.10'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'
}

apply plugin: 'org.jetbrains.dokka'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokka {
    outputFormat = 'jekyll'
    outputDirectory = "$buildDir/dokka"
}

task copyDocs(type: Copy) {
    from("$buildDir/dokka") {
        include '**/*.md'
    }
    into 'docs/dokka'
}

task addJekyllHeaders {
    doLast {
        fileTree("docs/dokka").each {
            def dokkaFile = it
            println "found $dokkaFile"

            def jekyllLines = dokkaFile.readLines()
                .plus(0, "---")
                .plus(1, "layout: default")
                .plus(2, "---")

            def jekyllContent = jekyllLines.join('\n')
            dokkaFile.write(jekyllContent)
        }
    }
}